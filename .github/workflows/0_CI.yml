name: CI

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  IMAGE: prod-app
  DEPLOYMENT_NAME: prod-app-deployment

jobs:
#  test:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Build the stack
#        run: docker-compose up -d
#      - name: Make tests with pytest
#        run: docker-compose exec -T app pytest -vv

  setup-build-publish:
#    needs: test
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

       # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

       # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: prod-app-cluster
          location: europe-west1-c
          credentials: ${{ secrets.GKE_SA_KEY }}

       # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |-
          gcloud --quiet auth configure-docker

       # Build the Docker image
      - name: Build Docker image
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/$IMAGE:${GITHUB_SHA::8}" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .

        # Push the Docker image to Google Container Registry
      - name: Publish Docker image to GCR
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:${GITHUB_SHA::8}"

#          docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
        # Set up kustomize
#      - name: Set up Kustomize
#        run: |-
#          curl --location https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.2.0/kustomize_v4.2.0_linux_amd64.tar.gz | tar xz
#          chmod u+x ./kustomize

        # Get cluster info
#      - name: Get cluster info
#        run: |-
#          kubectl cluster-info

       # Get pods info
#      - name: Get pods
#        run: |-
#          kubectl get pods --all-namespaces

      - name: Set image , build and deploy
        run: |-
          kubectl create deployment $DEPLOYMENT_NAME --image=gcr.io/$PROJECT_ID/$IMAGE:${GITHUB_SHA::8} --dry-run=client -o yaml > manifests/deployment.yaml
          kubectl set image deployment/$DEPLOYMENT_NAME prod-app=gcr.io/$PROJECT_ID/$IMAGE:${GITHUB_SHA::8}
          kubectl apply -f manifests
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide