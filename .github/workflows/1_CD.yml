name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
      - requested

  # Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:


env:
  PROJECT_ID: myapp
#  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
#  GKE_CLUSTER: cluster-1    # Add your cluster name here.
#  GKE_ZONE: us-central1-c   # Add your cluster zone here.
#  DEPLOYMENT_NAME: gke-prod # Add your deployment name here.
  IMAGE: app

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
#    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
#      with:
#        service_account_key: ${{ secrets.GKE_SA_KEY }}
#        project_id: ${{ secrets.GKE_PROJECT }}

#    # Configure docker to use the gcloud command-line tool as a credential helper
#    - run: |-
#        gcloud --quiet auth configure-docker

#    # Get the GKE credentials so we can deploy to the cluster
#    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
#      with:
#        cluster_name: ${{ env.GKE_CLUSTER }}
#        location: ${{ env.GKE_ZONE }}
#        credentials: ${{ secrets.GKE_SA_KEY }}

    # Build the Docker image
    - name: Build
      env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

#    # Push the Docker image to Google Container Registry
#    - name: Publish
#      run: |-
#        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"